<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
       default-lazy-init="true">

    <bean id="propertyConfigurer" class="org.openhealthtools.openatna.audit.OpenAtnaPropertiesLoader">
        <property name="location">
            <value>${openATNA.properties.path}</value>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- =============================================================================== -->
    <!-- ========================== Audit Service Configuration ======================== -->
    <!-- =============================================================================== -->
    <bean id="persistencePolicies" class="org.openhealthtools.openatna.audit.persistence.PersistencePolicies">
        <property name="allowNewNetworkAccessPoints" value="true"/>
        <property name="allowNewParticipants" value="true"/>
        <property name="allowNewObjects" value="true"/>
        <property name="allowNewSources" value="true"/>
        <property name="allowUnknownDetailTypes" value="true"/>
        <property name="allowNewCodes" value="true"/>
        <property name="persistErrors" value="true"/>
    </bean>

    <bean id="serviceConfig" class="org.openhealthtools.openatna.audit.service.ServiceConfiguration">
        <property name="persistencePolicies" ref="persistencePolicies"/>
        <!--

        *******************************************************************
        NOTE: Make sure the value of logMessageClass is not a place holder.
        *******************************************************************

        -->
        <property name="logMessageClass" value="org.openhealthtools.openatna.all.JaxbLogMessage"/>

        <!--<property name="validationProcessor" value="false"/>-->
        <!--
        Example atna processors
        -->
        <!--
        <property name="preVerifyProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        <property name="postVerifyProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        <property name="postPersistProcessors">
            <list>
                <value>org.openhealthtools.openatna.ext.processors.SimpleProcessor</value>
            </list>
        </property>
        -->
        <!-- example custom code file urls-->
        <!--
        <property name="codeUrls">
            <set>
                <value>file:/Users/bob/codes/mycodes.xml</value>
                <value>http://www.server.com/codes/theircodes.xml</value>
            </set>
        </property>
        -->
    </bean>

    <bean id="serverConfig" class="org.openhealthtools.openatna.audit.server.ServerConfiguration">
        <property name="actorDir" value="${ihe.actors.dir}"/>
        <property name="actorFile" value="${ihe.actors.file}"/>
    </bean>


    <bean id="auditService" class="org.openhealthtools.openatna.audit.service.AuditServiceImpl">
        <property name="serviceConfig" ref="serviceConfig"/>
        <property name="serverConfig" ref="serverConfig"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/OPEN_ATNA"/>
    </bean>

    <!--<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">-->
    <!--<constructor-arg>-->
    <!--<bean class="com.zaxxer.hikari.HikariConfig">-->
    <!--<constructor-arg>-->
    <!--<props>-->
    <!--<prop key="jdbcUrl">${db.url}</prop>-->
    <!--<prop key="username">${db.username}</prop>-->
    <!--<prop key="password">${db.password}</prop>-->
    <!--<prop key="driverClassName">${db.driver.class}</prop>-->
    <!--&lt;!&ndash;<prop key="dataSource.cachePrepStmts">true</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="dataSource.prepStmtCacheSize">250</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="dataSource.prepStmtCacheSqlLimit">2048</prop>&ndash;&gt;-->
    <!--</props>-->
    <!--</constructor-arg>-->
    <!--&lt;!&ndash;<property name="dataSourceClassName" value=${db.driver.class}/>&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="" value="5" />&ndash;&gt;-->
    <!--<property name="maximumPoolSize" value="15"/>-->
    <!--&lt;!&ndash;<property name="acquireIncrement" value="1" />&ndash;&gt;-->
    <!--<property name="maxLifetime" value="1800000"/>-->
    <!--</bean>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="${db.driver.class}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.username}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--</bean>-->

    <!-- Hibernate SessionFactory
    NOTE: after_transaction connection release mode. Could this be a problem in certain environments?
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:openatna-hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hib.dialect}</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <prop key="hibernate.hbm2ddl.auto">${hib.hbm2ddl.auto}</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven/>

    <!-- =============================================================================== -->
    <!-- ===================================== DAO Beans =============================== -->
    <!-- =============================================================================== -->

    <bean id="codeDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateCodeDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="participantDao"
          class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateParticipantDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="networkAccessPointDao"
          class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateNetworkAccessPointDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="objectDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateObjectDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="sourceDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateSourceDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="messageDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateMessageDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="entityDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateEntityDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="provisionalDao"
          class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateProvisionalDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="errorDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateErrorDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>
    <bean id="queryDao" class="org.openhealthtools.openatna.audit.persistence.dao.hibernate.HibernateQueryDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="auditLoggerPluginManager" class="org.openhealthtools.openatna.all.logging.AuditLoggerPluginManagerImpl"
          init-method="start" destroy-method="destroy"
          lazy-init="false" scope="singleton">
        <property name="loggers" value="${openATNA.auditLoggers}"/>
    </bean>

    <bean id="OpenATNAServiceLoaderListener" class="org.openhealthtools.openatna.web.OpenATNAServiceLoaderListener"
          init-method="start" destroy-method="destroy" lazy-init="false" scope="singleton"/>
</beans>
